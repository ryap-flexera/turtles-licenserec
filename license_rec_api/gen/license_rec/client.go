// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// licenseRec client
//
// Command:
// $ goa gen github.com/flexera/turtles-licenserec/license_rec_api/design

package licenserec

import (
	"context"

	goa "goa.design/goa"
)

// Client is the "licenseRec" service client.
type Client struct {
	GetLicenseEndpoint    goa.Endpoint
	UpdateLicenseEndpoint goa.Endpoint
}

// NewClient initializes a "licenseRec" service client given the endpoints.
func NewClient(getLicense, updateLicense goa.Endpoint) *Client {
	return &Client{
		GetLicenseEndpoint:    getLicense,
		UpdateLicenseEndpoint: updateLicense,
	}
}

// GetLicense calls the "GetLicense" endpoint of the "licenseRec" service.
func (c *Client) GetLicense(ctx context.Context, p *LicenseObject) (res int, err error) {
	var ires interface{}
	ires, err = c.GetLicenseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// UpdateLicense calls the "UpdateLicense" endpoint of the "licenseRec" service.
func (c *Client) UpdateLicense(ctx context.Context, p *LicenseObject) (res int, err error) {
	var ires interface{}
	ires, err = c.UpdateLicenseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
