// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// licenseRec endpoints
//
// Command:
// $ goa gen github.com/flexera/turtles-licenserec/license_rec_api/design

package licenserec

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "licenseRec" service endpoints.
type Endpoints struct {
	GetLicense    goa.Endpoint
	UpdateLicense goa.Endpoint
}

// NewEndpoints wraps the methods of the "licenseRec" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetLicense:    NewGetLicenseEndpoint(s),
		UpdateLicense: NewUpdateLicenseEndpoint(s),
	}
}

// Use applies the given middleware to all the "licenseRec" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetLicense = m(e.GetLicense)
	e.UpdateLicense = m(e.UpdateLicense)
}

// NewGetLicenseEndpoint returns an endpoint function that calls the method
// "GetLicense" of service "licenseRec".
func NewGetLicenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LicenseObject)
		return s.GetLicense(ctx, p)
	}
}

// NewUpdateLicenseEndpoint returns an endpoint function that calls the method
// "UpdateLicense" of service "licenseRec".
func NewUpdateLicenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LicenseObject)
		return s.UpdateLicense(ctx, p)
	}
}
