// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// licenseRec endpoints
//
// Command:
// $ goa gen github.com/ryap-flexera/turtles-licenserec/license_rec_api/design

package licenserec

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "licenseRec" service endpoints.
type Endpoints struct {
	GetLicense                   goa.Endpoint
	UpdateDeviceLicense          goa.Endpoint
	UpdateDeviceLicenseWithValue goa.Endpoint
}

// NewEndpoints wraps the methods of the "licenseRec" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetLicense:                   NewGetLicenseEndpoint(s),
		UpdateDeviceLicense:          NewUpdateDeviceLicenseEndpoint(s),
		UpdateDeviceLicenseWithValue: NewUpdateDeviceLicenseWithValueEndpoint(s),
	}
}

// Use applies the given middleware to all the "licenseRec" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetLicense = m(e.GetLicense)
	e.UpdateDeviceLicense = m(e.UpdateDeviceLicense)
	e.UpdateDeviceLicenseWithValue = m(e.UpdateDeviceLicenseWithValue)
}

// NewGetLicenseEndpoint returns an endpoint function that calls the method
// "GetLicense" of service "licenseRec".
func NewGetLicenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LicenseObject)
		return s.GetLicense(ctx, p)
	}
}

// NewUpdateDeviceLicenseEndpoint returns an endpoint function that calls the
// method "UpdateDeviceLicense" of service "licenseRec".
func NewUpdateDeviceLicenseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LicenseObject)
		return s.UpdateDeviceLicense(ctx, p)
	}
}

// NewUpdateDeviceLicenseWithValueEndpoint returns an endpoint function that
// calls the method "UpdateDeviceLicenseWithValue" of service "licenseRec".
func NewUpdateDeviceLicenseWithValueEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LicenseConsumption)
		return s.UpdateDeviceLicenseWithValue(ctx, p)
	}
}
